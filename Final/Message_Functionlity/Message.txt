#include <TinyGPS++.h>
#include <SoftwareSerial.h>

const int gpsRxPin = 2; // Connect GPS TX to Arduino pin 2
const int gpsTxPin = 3; // Connect GPS RX to Arduino pin 3
const int buttonPin = 4; // Connect button to Arduino pin 4

SoftwareSerial gpsSerial(gpsRxPin, gpsTxPin);
TinyGPSPlus gps;
bool buttonPressed = false;

// Define an array of phone numbers
String phoneNumbers[] = {
  "+916383803739", // Add more phone numbers as needed
  "+917010407993",
  "+917397573123",
  "+918072487519",
  "+918610505165",
};

void sendGPSviaSMS(String phoneNumber) {
  Serial.println("Sending GPS coordinates via SMS...");
  
  // Calculate Google Maps live location link
  String googleMapsLink = "http://maps.google.com/maps?q=" + String(gps.location.lat(), 6) + "," + String(gps.location.lng(), 6);
  
  // Additional string to include in the SMS
  String emergencyMessage = "Emergency, Ambulance no: XXXXX is coming";
  
  // GSM functionality to send SMS
  Serial.println("Sending SMS to: " + phoneNumber);
  delay(1000);
  Serial.print("AT");
  delay(100);  delay(100);
  Serial.write(13);           // ENTER
  delay(1000);
  Serial.write(10);           // NEW LINE
  delay(1000);
  Serial.print("AT+CMGF=1");  // TEXT MODE ENABLE
  delay(100);  delay(100);
  Serial.write(13);           // ENTER
  delay(1000);
  Serial.write(10);           // NEW LINE
  delay(1000);
  Serial.print("AT+CNMI=2,2,2,0");// INTERRUPT ENABLE
  delay(100);  delay(100);
  Serial.write(13);           // ENTER
  delay(1000);
  Serial.write(10);           // NEW LINE
  delay(1000);
  Serial.print("AT+CMGS=");   // SMS SEND FUNCTION
  delay(100);  delay(100);
  Serial.print('"');
  delay(100);  delay(100);
  Serial.print(phoneNumber); // Use the provided phone number
  delay(100);  delay(100);
  Serial.print('"');
  delay(100);  delay(100);
  Serial.write(13);
  delay(1000);
  Serial.write(10);
  delay(1000);
  Serial.println("Google Maps Live Location Link: " + googleMapsLink);
  delay(100);
  Serial.println(emergencyMessage); // Include the emergency message
  delay(100);
  Serial.write(26);        // CTRL+Z
  delay(100);  
  Serial.println("   COMPLETED     ");
}

void setup() {
  Serial.begin(9600);
  delay(3000); // Wait for serial monitor to open
  gpsSerial.begin(9600);
  pinMode(buttonPin, INPUT_PULLUP);
}

void loop() {
  if (digitalRead(buttonPin) == LOW && !buttonPressed) {
    buttonPressed = true;
    while (gpsSerial.available() > 0) {
      if (gps.encode(gpsSerial.read())) {
        // Iterate through the array and send SMS to each number
        for (int i = 0; i < sizeof(phoneNumbers) / sizeof(phoneNumbers[0]); i++) {
          sendGPSviaSMS(phoneNumbers[i]);
        }
      }
    }
  } else if (digitalRead(buttonPin) == HIGH && buttonPressed) {
    buttonPressed = false;
  }
}
